//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace FlightsNorway.Phone.MonitoringWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MonitoringWebService.MonitoringWebServiceSoap")]
    public interface MonitoringWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MonitorFlight", ReplyAction="*")]
        System.IAsyncResult BeginMonitorFlight(FlightsNorway.Phone.MonitoringWebService.MonitorFlightRequest request, System.AsyncCallback callback, object asyncState);
        
        FlightsNorway.Phone.MonitoringWebService.MonitorFlightResponse EndMonitorFlight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/StopMonitoringFlight", ReplyAction="*")]
        System.IAsyncResult BeginStopMonitoringFlight(FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightRequest request, System.AsyncCallback callback, object asyncState);
        
        FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightResponse EndStopMonitoringFlight(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MonitorFlightRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MonitorFlight", Namespace="http://tempuri.org/", Order=0)]
        public FlightsNorway.Phone.MonitoringWebService.MonitorFlightRequestBody Body;
        
        public MonitorFlightRequest() {
        }
        
        public MonitorFlightRequest(FlightsNorway.Phone.MonitoringWebService.MonitorFlightRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class MonitorFlightRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string callbackUrl;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string uniqueId;
        
        public MonitorFlightRequestBody() {
        }
        
        public MonitorFlightRequestBody(string callbackUrl, string uniqueId) {
            this.callbackUrl = callbackUrl;
            this.uniqueId = uniqueId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MonitorFlightResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MonitorFlightResponse", Namespace="http://tempuri.org/", Order=0)]
        public FlightsNorway.Phone.MonitoringWebService.MonitorFlightResponseBody Body;
        
        public MonitorFlightResponse() {
        }
        
        public MonitorFlightResponse(FlightsNorway.Phone.MonitoringWebService.MonitorFlightResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class MonitorFlightResponseBody {
        
        public MonitorFlightResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopMonitoringFlightRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StopMonitoringFlight", Namespace="http://tempuri.org/", Order=0)]
        public FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightRequestBody Body;
        
        public StopMonitoringFlightRequest() {
        }
        
        public StopMonitoringFlightRequest(FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class StopMonitoringFlightRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string callbackUrl;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string uniqueId;
        
        public StopMonitoringFlightRequestBody() {
        }
        
        public StopMonitoringFlightRequestBody(string callbackUrl, string uniqueId) {
            this.callbackUrl = callbackUrl;
            this.uniqueId = uniqueId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopMonitoringFlightResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StopMonitoringFlightResponse", Namespace="http://tempuri.org/", Order=0)]
        public FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightResponseBody Body;
        
        public StopMonitoringFlightResponse() {
        }
        
        public StopMonitoringFlightResponse(FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class StopMonitoringFlightResponseBody {
        
        public StopMonitoringFlightResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MonitoringWebServiceSoapChannel : FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonitoringWebServiceSoapClient : System.ServiceModel.ClientBase<FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap>, FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap {
        
        private BeginOperationDelegate onBeginMonitorFlightDelegate;
        
        private EndOperationDelegate onEndMonitorFlightDelegate;
        
        private System.Threading.SendOrPostCallback onMonitorFlightCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopMonitoringFlightDelegate;
        
        private EndOperationDelegate onEndStopMonitoringFlightDelegate;
        
        private System.Threading.SendOrPostCallback onStopMonitoringFlightCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MonitoringWebServiceSoapClient() {
        }
        
        public MonitoringWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonitoringWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitoringWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitoringWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MonitorFlightCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopMonitoringFlightCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap.BeginMonitorFlight(FlightsNorway.Phone.MonitoringWebService.MonitorFlightRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMonitorFlight(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMonitorFlight(string callbackUrl, string uniqueId, System.AsyncCallback callback, object asyncState) {
            FlightsNorway.Phone.MonitoringWebService.MonitorFlightRequest inValue = new FlightsNorway.Phone.MonitoringWebService.MonitorFlightRequest();
            inValue.Body = new FlightsNorway.Phone.MonitoringWebService.MonitorFlightRequestBody();
            inValue.Body.callbackUrl = callbackUrl;
            inValue.Body.uniqueId = uniqueId;
            return ((FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap)(this)).BeginMonitorFlight(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FlightsNorway.Phone.MonitoringWebService.MonitorFlightResponse FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap.EndMonitorFlight(System.IAsyncResult result) {
            return base.Channel.EndMonitorFlight(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndMonitorFlight(System.IAsyncResult result) {
            FlightsNorway.Phone.MonitoringWebService.MonitorFlightResponse retVal = ((FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap)(this)).EndMonitorFlight(result);
        }
        
        private System.IAsyncResult OnBeginMonitorFlight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string callbackUrl = ((string)(inValues[0]));
            string uniqueId = ((string)(inValues[1]));
            return this.BeginMonitorFlight(callbackUrl, uniqueId, callback, asyncState);
        }
        
        private object[] OnEndMonitorFlight(System.IAsyncResult result) {
            this.EndMonitorFlight(result);
            return null;
        }
        
        private void OnMonitorFlightCompleted(object state) {
            if ((this.MonitorFlightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MonitorFlightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MonitorFlightAsync(string callbackUrl, string uniqueId) {
            this.MonitorFlightAsync(callbackUrl, uniqueId, null);
        }
        
        public void MonitorFlightAsync(string callbackUrl, string uniqueId, object userState) {
            if ((this.onBeginMonitorFlightDelegate == null)) {
                this.onBeginMonitorFlightDelegate = new BeginOperationDelegate(this.OnBeginMonitorFlight);
            }
            if ((this.onEndMonitorFlightDelegate == null)) {
                this.onEndMonitorFlightDelegate = new EndOperationDelegate(this.OnEndMonitorFlight);
            }
            if ((this.onMonitorFlightCompletedDelegate == null)) {
                this.onMonitorFlightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMonitorFlightCompleted);
            }
            base.InvokeAsync(this.onBeginMonitorFlightDelegate, new object[] {
                        callbackUrl,
                        uniqueId}, this.onEndMonitorFlightDelegate, this.onMonitorFlightCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap.BeginStopMonitoringFlight(FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStopMonitoringFlight(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginStopMonitoringFlight(string callbackUrl, string uniqueId, System.AsyncCallback callback, object asyncState) {
            FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightRequest inValue = new FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightRequest();
            inValue.Body = new FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightRequestBody();
            inValue.Body.callbackUrl = callbackUrl;
            inValue.Body.uniqueId = uniqueId;
            return ((FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap)(this)).BeginStopMonitoringFlight(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightResponse FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap.EndStopMonitoringFlight(System.IAsyncResult result) {
            return base.Channel.EndStopMonitoringFlight(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndStopMonitoringFlight(System.IAsyncResult result) {
            FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightResponse retVal = ((FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap)(this)).EndStopMonitoringFlight(result);
        }
        
        private System.IAsyncResult OnBeginStopMonitoringFlight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string callbackUrl = ((string)(inValues[0]));
            string uniqueId = ((string)(inValues[1]));
            return this.BeginStopMonitoringFlight(callbackUrl, uniqueId, callback, asyncState);
        }
        
        private object[] OnEndStopMonitoringFlight(System.IAsyncResult result) {
            this.EndStopMonitoringFlight(result);
            return null;
        }
        
        private void OnStopMonitoringFlightCompleted(object state) {
            if ((this.StopMonitoringFlightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopMonitoringFlightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopMonitoringFlightAsync(string callbackUrl, string uniqueId) {
            this.StopMonitoringFlightAsync(callbackUrl, uniqueId, null);
        }
        
        public void StopMonitoringFlightAsync(string callbackUrl, string uniqueId, object userState) {
            if ((this.onBeginStopMonitoringFlightDelegate == null)) {
                this.onBeginStopMonitoringFlightDelegate = new BeginOperationDelegate(this.OnBeginStopMonitoringFlight);
            }
            if ((this.onEndStopMonitoringFlightDelegate == null)) {
                this.onEndStopMonitoringFlightDelegate = new EndOperationDelegate(this.OnEndStopMonitoringFlight);
            }
            if ((this.onStopMonitoringFlightCompletedDelegate == null)) {
                this.onStopMonitoringFlightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopMonitoringFlightCompleted);
            }
            base.InvokeAsync(this.onBeginStopMonitoringFlightDelegate, new object[] {
                        callbackUrl,
                        uniqueId}, this.onEndStopMonitoringFlightDelegate, this.onStopMonitoringFlightCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap CreateChannel() {
            return new MonitoringWebServiceSoapClientChannel(this);
        }
        
        private class MonitoringWebServiceSoapClientChannel : ChannelBase<FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap>, FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap {
            
            public MonitoringWebServiceSoapClientChannel(System.ServiceModel.ClientBase<FlightsNorway.Phone.MonitoringWebService.MonitoringWebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginMonitorFlight(FlightsNorway.Phone.MonitoringWebService.MonitorFlightRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MonitorFlight", _args, callback, asyncState);
                return _result;
            }
            
            public FlightsNorway.Phone.MonitoringWebService.MonitorFlightResponse EndMonitorFlight(System.IAsyncResult result) {
                object[] _args = new object[0];
                FlightsNorway.Phone.MonitoringWebService.MonitorFlightResponse _result = ((FlightsNorway.Phone.MonitoringWebService.MonitorFlightResponse)(base.EndInvoke("MonitorFlight", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStopMonitoringFlight(FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("StopMonitoringFlight", _args, callback, asyncState);
                return _result;
            }
            
            public FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightResponse EndStopMonitoringFlight(System.IAsyncResult result) {
                object[] _args = new object[0];
                FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightResponse _result = ((FlightsNorway.Phone.MonitoringWebService.StopMonitoringFlightResponse)(base.EndInvoke("StopMonitoringFlight", _args, result)));
                return _result;
            }
        }
    }
}
